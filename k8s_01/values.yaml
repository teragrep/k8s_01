image:
  # Image will be downloaded from {repository}/{path}:{Tag from Chart.Version}
  repository: ghcr.io
  path: teragrep/k8s_01
  pullPolicy: IfNotPresent

config:
  # Which port metrics service will be exposed to
  metrics:
    port: 12345
  # Kubernetes configurations
  kubernetes:
    # Metadata to be added. Example:
    # metadata:
    #   cluster: demo
    #   owner: xyz
    # maps as [user_metadata@48577 cluster="demo" owner="xyz"].
    metadata: {}
    # Base path where logs are read from. Uses {logdir}/{logfiles}
    logdir: /var/log/containers
    # Timezone used by the logs
    timezone: Europe/Helsinki
    # How long API responses are cached
    cacheExpireInterval: 900
    # How many api responses are cached
    cacheMaxEntries: 4096
    labels:
      hostname:
        # Hostname to use if label not found
        fallback: fallback-hostname
        # Which label to search for when looking for hostname
        labelStdout: host
        # Which label to search for when looking for hostname for stderr streams. Uses labelStdout if set to null.
        labelStderr: host-stderr
      appname:
        # Appname to use if label not found
        fallback: fallback-appname
        # Which label to search for when looking for appname
        labelStdout: app
        # Which label to search for when looking for appname for stderr streams. Uses labelStdout if set to null.
        labelStderr: app-stderr
      whitelist:
        # Enable whitelisting of events to be collected when label exists and value is equal to "true", case insensitive
        enabled: true
        # Label to search for
        label: collect-if-label-found
    # Regex for logfiles that are read. Uses {logdir}/{logfiles}
    logfiles:
      - example-pod_default_.*
      - second-pod_default_.*
    # How many threads are spawned for each logfile. One relp connection will be opened for each logfile thread so there are total of len(logfiles)*maxLogReadingThreads relp connections.
    maxLogReadingThreads: 2
  relp:
    # Relp target server. Can be set dynamically with "K8S_01_RELP_TARGET" environment variable.
    target: 127.0.0.1
    # Relp target server port. Can be set dynamically with "K8S_01_RELP_PORT" environment variable
    port: 1601
    # tls settings
    tls:
      # Is TLS enabled at all
      enabled: false
      # Absolute /path/to/keystore.jks
      # This can be passed as a secret and you can make it with following command - key for file is automatically set
      # kubectl create secret generic -n teragrep keystore --from-file=keystore.jks=some-keystore.jks
      # and it will be automatically mounted to /opt/teragrep/k8s_01/secrets/. It is optional so no mounts needed if tls is not used
      # Secret which is passed to the container can be controlled via keystore.secretName
      keystore: /opt/teragrep/k8s_01/secret/keystore.jks
      # Password for the keystore
      password: changeme
    # Timeouts and intervals, in milliseconds.
    connectionTimeout: 5000
    readTimeout: 5000
    writeTimeout: 5000
    reconnectInterval: 5000

# Application logging level. For more information, see templates/configmap.yaml and log4j2.xml section
logging:
  level: INFO

# Keystore related
keystore:
  # Which secret is passed to the container
  secretName: keystore

# Statestore related
statestore:
  # Where statestore is mounted on the host
  hostMountPath: /srv/k8s_01/statestore
